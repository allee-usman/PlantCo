name: CI

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

jobs:
  # Detect what changed
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      client: ${{ steps.changes.outputs.client }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            backend:
              - 'backend/**'
            client:
              - 'client/**'

  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.backend == 'true'
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint
        run: npm run lint
      
      - name: Check formatting
        run: npx prettier --check .
      
      - name: Type check
        run: npx tsc --noEmit
      
      - name: Build
        run: npm run build

  client:
    name: Client CI
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.client == 'true'
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup Expo CLI
        run: npm install -g @expo/cli
      
      - name: Lint (Expo ESLint)
        run: npm run lint
      
      - name: Check formatting (with Tailwind plugin)
        run: npx prettier --check . --plugin=prettier-plugin-tailwindcss
      
      - name: Type check
        run: npx tsc --noEmit
      
      - name: Build check
        run: npx expo export --platform all
        env:
          EXPO_NO_DOTENV: 1